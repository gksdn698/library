<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jafa.repository.MemberRepository">
  
   <resultMap type="memberVO" id="memberMap">
  		<id property="memberId" column="memberId"/>
  		<result property="memberId" column="memberId"/>
  		<result property="memberPwd" column="memberPwd"/>
  		<result property="confirmPwd" column="confirmPwd"/> 
  		<result property="memberName" column="memberName"/>
  		<result property="memberPhone" column="memberPhone" />
  		<result property="memberGender" column="memberGender" />
  		<result property="email" column="email"/>
  		<result property="enabled" column="enabled"/>
  		<result property="regDate" column="regDate"/>
  		<result property="updateDate" column="updateDate"/>
  		<collection property="authList" resultMap="authMap"></collection>
  	</resultMap>
  	
 	<resultMap type="authVO" id="authMap">
		<result property="memberId" column="memberId"/>
		<result property="auth" column="auth"/>
  	</resultMap>
  	
  	 <resultMap type="memberDTO" id="memberDTOMap">
  		<id property="memberId" column="memberId"/>
  		<result property="memberId" column="memberId"/>
  		<result property="memberName" column="memberName"/>
  		<result property="memberPhone" column="memberPhone" />
  		<result property="memberGender" column="memberGender" />
  		<result property="email" column="email"/>
  		<result property="enabled" column="enabled"/>
  		<result property="regDate" column="regDate"/>
  		<result property="updateDate" column="updateDate"/>
  		<collection property="authList" resultMap="authMap"></collection>
  	</resultMap>
  	
	<select id="read" resultMap="memberMap">
	    select 
	        m.memberId, memberPwd, confirmPwd, memberName, email, memberPhone, memberGender, enabled,
	        regDate, updateDate, a.auth
	    from tbl_member m 
	    left outer join tbl_member_auth a on m.memberId = a.memberId
	    where m.memberId = #{memberId}
	</select>
	
	<select id="readDTO" resultMap="memberDTOMap">
	    select 
	        m.memberId, memberName, email, memberPhone, memberGender, enabled,
	        regDate, updateDate, a.auth
	    from tbl_member m 
	    left outer join tbl_member_auth a on m.memberId = a.memberId
	    where m.memberId = #{memberId}
	</select>

	
	<insert id="insert">
		insert into tbl_member(memberId,memberPwd,memberName,email,memberPhone, confirmPwd,memberGender)
		values(#{memberId},#{memberPwd},#{memberName},#{email}, #{memberPhone}, #{confirmPwd},#{memberGender})
	</insert>
	
	<select id="selectById" resultType="memberVO">
		select memberId,memberPwd,memberName,email,memberPhone
		from tbl_member where memberId=#{memberId}
	</select>
	
	<select id="selectByIdDTO" resultType="memberDTO">
		select memberId,memberName,email,memberPhone,memberGender
		from tbl_member where memberId=#{memberId}
	</select>
	
	<update id="update">
		update tbl_member set
			memberName = #{memberName}, 
			email = #{email},
			memberPwd = #{memberPwd},
			memberPhone = #{memberPhone}
		where memberId = #{memberId}
	</update>
	
	<update id="updateDTO">
	    update tbl_member set
	        memberName = #{memberName}, 
	        email = #{email},
	        <!-- memberPwd = #{memberPwd, jdbcType=VARCHAR}, --> 
	        memberGender = #{memberGender},
	        memberPhone = #{memberPhone}
	    where memberId = #{memberId}
	</update>

	
	<update id="updatePassword">
		update tbl_member set
			memberPwd = #{memberPwd} 
		where memberId = #{memberId}
	</update>
	
	<select id="selectByEmail" resultType="string">
		select memberId from tbl_member where email=#{email}
	</select>
	
	 <select id="getMyArticles" resultMap="userInfo">
	    select  
	        m.memberId, memberPwd, confirmPwd, memberName, memberPhone, memberGender,
	        email, enabled, regDate, updateDate,b.bno 
	    from tbl_member m 
	    left outer join tbl_board b on m.memberId = b.writer
	    where 
	        m.memberId = #{memberId};
	</select>
	
	<select id="getMyComments" resultMap="CommentInfo">
	    select  
	        m.memberId, memberPwd, confirmPwd, memberName, memberPhone, memberGender,
	        email, enabled, regDate, updateDate,r.rno 
	    from tbl_member m 
	    left outer join tbl_reply r on m.memberId = r.replyer
	    where 
	        m.memberId = #{memberId};
	</select>
	
	 <!-- 자식 레코드 삭제 -->
    <delete id="deleteAuthByMemberId">
        DELETE FROM tbl_member_auth WHERE memberId = #{memberId}
    </delete>
	
	<delete id="deleteRentByMemberId">
        DELETE FROM tbl_rent WHERE memberId = #{memberId}
    </delete>
	
	 <!-- 부모 레코드 삭제 -->
	<delete id="deleteById">
	    DELETE FROM tbl_member WHERE memberId = #{memberId}
	</delete>
	
	<select id="findAll" resultMap="memberMap">
    SELECT 
        m.memberId, memberPwd, confirmPwd, memberName, email, memberPhone, memberGender, enabled,
        regDate, updateDate, a.auth
	    FROM tbl_member m 
	    LEFT OUTER JOIN tbl_member_auth a ON m.memberId = a.memberId
	</select>
	
</mapper>
